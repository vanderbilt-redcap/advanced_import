{"version":3,"file":"advanced_import.umd.548.js","mappings":"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","sources":["webpack://advanced_import/./src/components/FileUploader.vue?be4f","webpack://advanced_import/src/components/FileUploader.vue","webpack://advanced_import/./src/components/FileUploader.vue?877c","webpack://advanced_import/./src/components/FileUploader.vue","webpack://advanced_import/./src/pages/Test.vue?6a95","webpack://advanced_import/src/pages/Test.vue","webpack://advanced_import/./src/pages/Test.vue?882f","webpack://advanced_import/./src/pages/Test.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.processing)?_c('div',[_c('b-progress',{attrs:{\"max\":_vm.max,\"show-progress\":\"\",\"animated\":false,\"variant\":\"primary\",\"size\":\"sm\"}},[_c('b-progress-bar',{attrs:{\"value\":_vm.progress,\"label\":(((_vm.progress*100).toFixed(2)) + \"%\")}})],1),_c('div',{staticClass:\"text-muted small\"},[(_vm.uploaded_bytes && _vm.uploaded_bytes>0)?_c('span',[_vm._v(\"uploaded \"+_vm._s(_vm.formatBytes(_vm.uploaded_bytes))+\" of \"+_vm._s(_vm.formatBytes(_vm.file_size)))]):_vm._e(),_c('non-blank-space')],1)],1):_vm._e(),(false)?_c('section',{staticClass:\"debug\"},[_vm._v(\" \"+_vm._s(_vm.progress)+\" \"+_vm._s(_vm.uploaded_bytes)+\" \"+_vm._s(_vm.remote_file_name)+\" \"+_vm._s(_vm.file_size)+\" \"+_vm._s(_vm.processed)+\" \")]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div v-if=\"processing\">\n            <b-progress  :max=\"max\" show-progress :animated=\"false\" variant=\"primary\"  size=\"sm\">\n                <b-progress-bar :value=\"progress\" :label=\"`${(progress*100).toFixed(2)}%`\"></b-progress-bar>\n            </b-progress>\n            <!-- <button class=\"btn btn-danger\" @click=\"onPause\">Pause</button> -->\n            <div class=\"text-muted small\">\n                <span v-if=\"uploaded_bytes && uploaded_bytes>0\">uploaded {{formatBytes(uploaded_bytes)}} of {{formatBytes(file_size)}}</span>\n                <non-blank-space />\n            </div>\n        </div>\n        <section class=\"debug\" v-if=\"false\">\n            {{progress}}\n            {{uploaded_bytes}}\n            {{remote_file_name}}\n            {{file_size}}\n            {{processed}}\n        </section>\n    </div>\n</template>\n\n<script>\n// import { mapState } from 'vuex'\nimport FileReaderAsync from '@/libs/FileReaderAsync'\nimport {formatBytes} from '@/libs/Utility'\n\nconst MIN_CHUNK_SIZE = 1000 * 1024\nconst MAX_CHUNK_SIZE = 1000 * 1024 * 5\nconst TOTAL_CHUNKS = 20\n\nclass UploadMetadata {\n\n    constructor({file_size, name, percentage, progress, unique_name, uploaded_bytes, written_bytes}) {\n        this.file_size = file_size\n        this.name = name\n        this.percentage = percentage\n        this.progress = progress\n        this.unique_name = unique_name\n        this.uploaded_bytes = uploaded_bytes\n        this.written_bytes = written_bytes\n    }\n}\n\nexport default {\n    data() {\n        return {\n            cancel: null, // placeholder for canceling the promsie\n            content: '',\n            start: 0,\n            end: 0,\n            max:1,\n            processing: false,\n            paused: false,\n            abort: false,\n            remote_file_name: null, // unique file name used to save the file on the server\n            progress: 0,\n            uploaded_bytes:0,\n            file_size: 0,\n            formatBytes,\n        }\n    },\n    props: {\n        files: {\n            type: [File,Array],\n            default: () => []\n        }\n    },\n    computed: {\n        /* ...mapState({\n            file: state => state.import_settings.files,\n        }), */\n        file() {\n            let files = this.files\n            let file\n            if(typeof files==='object') file = files\n            else if(Array.isArray(files) && files.length>0) file = files[0]\n            if(file) return new File([file], file.name)\n            else return null\n        },\n        chunk_size() {\n            return this.calcChunkSize(this.file)\n        },\n        processed() {\n            let uploaded_bytes = this.uploaded_bytes || 0\n            let file_size = this.file_size || 0\n            let formatted_uploaded_bytes =  formatBytes(uploaded_bytes)\n            let formatted_file_size =  formatBytes(file_size)\n            return `${formatted_uploaded_bytes}/${formatted_file_size}`\n        }\n    },\n    destroyed() {\n        this.stop()\n    },\n    methods: {\n        async processChunk(file, chunk) {\n            try {\n                if(this.abort) return\n                const response = await this.sendChunk(file, chunk)\n                const {data} = response\n                if(!data) throw new Error('no response') //exit if no response data\n                const metadata = new UploadMetadata(data)\n                this.updateMetadata(metadata)\n                this.$emit('progress', {file, metadata}) // notify advancement\n                // advance the start\n                this.start = this.end\n\n                if(!this.paused && (this.end < file.size)) {\n                    return this.upload()\n                }\n                else {\n                    // exit if we are done\n                    this.reset()\n                    this.$emit('completed', metadata) // notify completed\n                    return metadata\n                }\n            } catch (error) {\n                const {response={}} = error\n                const {data={}} = response\n                const {message=''} = data\n                // console.log(message, file, error)\n                this.$emit('error', {message, file, error}) // notify error\n                this.reset()\n            }\n\n        },\n        calculateProgress(file, position) {\n            try {\n                const value = position / file.size\n                if(position<0) return 0\n                if(position>file.size) return 1\n                return value\n            } catch (error) {\n                return 0\n            }\n        },\n        sendChunk(file, chunk) {\n            const promise = this.$API.dispatch('upload/upload',file, chunk)\n            this.cancel = promise.cancel\n            return promise\n        },\n        calcChunkSize(file) {\n            if(!file) return MIN_CHUNK_SIZE\n            const {size=0} = file\n            let chunk_size = size/TOTAL_CHUNKS\n            if(chunk_size<MIN_CHUNK_SIZE) return MIN_CHUNK_SIZE\n            if(chunk_size>MAX_CHUNK_SIZE) return MAX_CHUNK_SIZE\n            return chunk_size\n        },\n        updateMetadata({file_size, progress, unique_name, uploaded_bytes}) {\n            this.file.unique_name = unique_name\n            this.remote_file_name = unique_name\n            this.uploaded_bytes = uploaded_bytes\n            this.file_size = file_size\n            this.progress = progress\n            return progress\n        },\n        async upload() {\n            if(!this.file) return\n            const file = this.file\n            this.processing = true\n            this.paused = false\n            this.end = this.start + this.chunk_size + 1\n            const blob = file.slice( this.start, this.end )\n            const file_reader = new FileReaderAsync()\n            const chunk = await file_reader.readAsDataURLAsync(blob)\n            return this.processChunk(file, chunk)\n        },\n        stop() {\n            if(typeof this.cancel==='function') this.cancel()\n            this.abort = true\n        },\n        onPause() {\n            this.processing = false\n            this.paused = true\n        },\n        reset() {\n            setTimeout(()=>{\n                this.cancel = null\n                this.start = 0\n                this.end = 0\n                this.processing = false\n                this.paused = false\n                this.abort = false\n            },1000)\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>","import mod from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-80[0].rules[0].use[1]!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ruleSet[0].rules[0].use[0]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FileUploader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-80[0].rules[0].use[1]!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ruleSet[0].rules[0].use[0]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FileUploader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FileUploader.vue?vue&type=template&id=786ceae4&\"\nimport script from \"./FileUploader.vue?vue&type=script&lang=js&\"\nexport * from \"./FileUploader.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('FileUploader',{ref:\"uploader\",attrs:{\"files\":_vm.files}}),_c('b-form-file',{ref:\"file\",attrs:{\"id\":\"file\",\"DISABLED-state\":\"Boolean(files)\",\"placeholder\":\"Choose a file or drop it here...\",\"drop-placeholder\":\"Drop file here...\"},model:{value:(_vm.files),callback:function ($$v) {_vm.files=$$v},expression:\"files\"}}),_c('b-button',{on:{\"click\":_vm.upload}},[_vm._v(\"upload\")]),_c('div',{staticClass:\"d-flex flex-row justify-content-center align-items-center\"},[_c('b-card',{attrs:{\"title\":\"This is a test\",\"img-src\":_vm.cat},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_c('h6',{staticClass:\"mb-0\"},[_vm._v(\"Header Slot\")])]},proxy:true},{key:\"footer\",fn:function(){return [_c('h6',{staticClass:\"mb-0\"},[_vm._v(\"Footer Slot\")])]},proxy:true}])},[_c('b-card-text',[_vm._v(\" This is a test \")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <FileUploader ref=\"uploader\" :files=\"files\"/>\n              <b-form-file\n            id=\"file\"\n            v-model=\"files\"\n            ref=\"file\"\n            DISABLED-state=\"Boolean(files)\"\n            placeholder=\"Choose a file or drop it here...\"\n            drop-placeholder=\"Drop file here...\"\n            ></b-form-file>\n            <b-button @click=\"upload\">upload</b-button>\n        <div class=\"d-flex flex-row justify-content-center align-items-center\">\n            <b-card \n                title=\"This is a test\"\n                :img-src=\"cat\">\n            <template #header>\n                <h6 class=\"mb-0\">Header Slot</h6>\n            </template>\n                <b-card-text>\n                This is a test\n                </b-card-text>\n                <template #footer>\n                    <h6 class=\"mb-0\">Footer Slot</h6>\n                </template>\n            </b-card>\n        </div>\n        <!-- <div>\n            <input type=\"file\" ref=\"file\" @change=\"onFileChange\">\n            <button @click=\"upload\">upload</button>\n        </div>\n        <b-progress :value=\"progress\" :max=\"max\" show-progress animated v-if=\"uploading\"></b-progress>\n        <span v-else-if=\"completed\">Completed!</span> -->\n    </div>\n</template>\n\n<script>\nimport cat from \"@/assets/crying-cat.jpg\"\nimport FileUploader from '@/components/FileUploader'\n\nexport default {\n    components: {FileUploader},\n    data() {\n        return {\n            cat,\n            files: null,\n            progress: 0,\n            max: 100,\n            uploading: false,\n            completed: false,\n        }\n    },\n    computed: {},\n    methods: {\n        onUploadCompleted() {\n            console.log(arguments)\n        },\n        upload() {\n           const uploader = this.$refs.uploader\n            uploader.$on('completed', () => {\n                console.log(arguments)\n            })\n            uploader.$on('error', ({message, file, error})=> {\n                console.log({message, file, error})\n            })\n            return uploader.upload()\n        }\n    },\n}\n</script>\n\n<style scope>\n\n</style>","import mod from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-80[0].rules[0].use[1]!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ruleSet[0].rules[0].use[0]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-80[0].rules[0].use[1]!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ruleSet[0].rules[0].use[0]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Test.vue?vue&type=template&id=7d9880e0&\"\nimport script from \"./Test.vue?vue&type=script&lang=js&\"\nexport * from \"./Test.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":[],"sourceRoot":""}