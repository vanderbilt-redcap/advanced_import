{"version":3,"file":"advanced_import.umd.min.994.js","mappings":"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","sources":["webpack://advanced_import/./src/components/FileUploader.vue","webpack://advanced_import/src/components/FileUploader.vue","webpack://advanced_import/./src/components/FileUploader.vue?2f93","webpack://advanced_import/./src/components/FileUploader.vue?8077","webpack://advanced_import/./src/components/LogsTable.vue","webpack://advanced_import/src/components/LogsTable.vue","webpack://advanced_import/./src/components/LogsTable.vue?13ea","webpack://advanced_import/./src/components/LogsTable.vue?fdb0","webpack://advanced_import/./src/components/import/Review.vue","webpack://advanced_import/./src/components/FileProcesser.vue","webpack://advanced_import/src/components/FileProcesser.vue","webpack://advanced_import/./src/components/FileProcesser.vue?035a","webpack://advanced_import/./src/components/FileProcesser.vue?c2ef","webpack://advanced_import/src/components/import/Review.vue","webpack://advanced_import/./src/components/import/Review.vue?5c99","webpack://advanced_import/./src/components/import/Review.vue?ce9c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(_vm.processing)?_c('div',[_c('b-progress',{attrs:{\"max\":_vm.max,\"show-progress\":\"\",\"animated\":false,\"variant\":\"primary\",\"size\":\"sm\"}},[_c('b-progress-bar',{attrs:{\"value\":_vm.progress,\"label\":`${(_vm.progress*100).toFixed(2)}%`}})],1),_c('div',{staticClass:\"text-muted small\"},[(_vm.uploaded_bytes && _vm.uploaded_bytes>0)?_c('span',[_vm._v(\"uploaded \"+_vm._s(_vm.formatBytes(_vm.uploaded_bytes))+\" of \"+_vm._s(_vm.formatBytes(_vm.file_size)))]):_vm._e(),_c('non-blank-space')],1)],1):_vm._e(),(false)?_c('section',{staticClass:\"debug\"},[_vm._v(\" \"+_vm._s(_vm.progress)+\" \"+_vm._s(_vm.uploaded_bytes)+\" \"+_vm._s(_vm.remote_file_name)+\" \"+_vm._s(_vm.file_size)+\" \"+_vm._s(_vm.processed)+\" \")]):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div v-if=\"processing\">\n            <b-progress  :max=\"max\" show-progress :animated=\"false\" variant=\"primary\"  size=\"sm\">\n                <b-progress-bar :value=\"progress\" :label=\"`${(progress*100).toFixed(2)}%`\"></b-progress-bar>\n            </b-progress>\n            <!-- <button class=\"btn btn-danger\" @click=\"onPause\">Pause</button> -->\n            <div class=\"text-muted small\">\n                <span v-if=\"uploaded_bytes && uploaded_bytes>0\">uploaded {{formatBytes(uploaded_bytes)}} of {{formatBytes(file_size)}}</span>\n                <non-blank-space />\n            </div>\n        </div>\n        <section class=\"debug\" v-if=\"false\">\n            {{progress}}\n            {{uploaded_bytes}}\n            {{remote_file_name}}\n            {{file_size}}\n            {{processed}}\n        </section>\n    </div>\n</template>\n\n<script>\n// import { mapState } from 'vuex'\nimport FileReaderAsync from '@/libs/FileReaderAsync'\nimport {formatBytes} from '@/libs/Utility'\n\nconst MIN_CHUNK_SIZE = 1000 * 1024\nconst MAX_CHUNK_SIZE = 1000 * 1024 * 5\nconst TOTAL_CHUNKS = 20\n\nclass UploadMetadata {\n\n    constructor({file_size, name, percentage, progress, unique_name, uploaded_bytes, written_bytes}) {\n        this.file_size = file_size\n        this.name = name\n        this.percentage = percentage\n        this.progress = progress\n        this.unique_name = unique_name\n        this.uploaded_bytes = uploaded_bytes\n        this.written_bytes = written_bytes\n    }\n}\n\nexport default {\n    data() {\n        return {\n            cancel: null, // placeholder for canceling the promsie\n            content: '',\n            start: 0,\n            end: 0,\n            max:1,\n            processing: false,\n            paused: false,\n            abort: false,\n            remote_file_name: null, // unique file name used to save the file on the server\n            progress: 0,\n            uploaded_bytes:0,\n            file_size: 0,\n            formatBytes,\n        }\n    },\n    props: {\n        files: {\n            type: [File,Array],\n            default: () => []\n        }\n    },\n    computed: {\n        /* ...mapState({\n            file: state => state.import_settings.files,\n        }), */\n        file() {\n            let files = this.files\n            let file\n            if(typeof files==='object') file = files\n            else if(Array.isArray(files) && files.length>0) file = files[0]\n            if(file) return new File([file], file.name)\n            else return null\n        },\n        chunk_size() {\n            return this.calcChunkSize(this.file)\n        },\n        processed() {\n            let uploaded_bytes = this.uploaded_bytes || 0\n            let file_size = this.file_size || 0\n            let formatted_uploaded_bytes =  formatBytes(uploaded_bytes)\n            let formatted_file_size =  formatBytes(file_size)\n            return `${formatted_uploaded_bytes}/${formatted_file_size}`\n        }\n    },\n    destroyed() {\n        this.stop()\n    },\n    methods: {\n        async processChunk(file, chunk) {\n            try {\n                if(this.abort) return\n                const response = await this.sendChunk(file, chunk)\n                const {data} = response\n                if(!data) throw new Error('no response') //exit if no response data\n                const metadata = new UploadMetadata(data)\n                this.updateMetadata(metadata)\n                this.$emit('progress', {file, metadata}) // notify advancement\n                // advance the start\n                this.start = this.end\n\n                if(!this.paused && (this.end < file.size)) {\n                    return this.upload()\n                }\n                else {\n                    // exit if we are done\n                    this.reset()\n                    this.$emit('completed', metadata) // notify completed\n                    return metadata\n                }\n            } catch (error) {\n                const {response={}} = error\n                const {data={}} = response\n                const {message=''} = data\n                // console.log(message, file, error)\n                this.$emit('error', {message, file, error}) // notify error\n                this.reset()\n            }\n\n        },\n        calculateProgress(file, position) {\n            try {\n                const value = position / file.size\n                if(position<0) return 0\n                if(position>file.size) return 1\n                return value\n            } catch (error) {\n                return 0\n            }\n        },\n        sendChunk(file, chunk) {\n            const promise = this.$API.dispatch('upload/upload',file, chunk)\n            this.cancel = promise.cancel\n            return promise\n        },\n        calcChunkSize(file) {\n            if(!file) return MIN_CHUNK_SIZE\n            const {size=0} = file\n            let chunk_size = size/TOTAL_CHUNKS\n            if(chunk_size<MIN_CHUNK_SIZE) return MIN_CHUNK_SIZE\n            if(chunk_size>MAX_CHUNK_SIZE) return MAX_CHUNK_SIZE\n            return chunk_size\n        },\n        updateMetadata({file_size, progress, unique_name, uploaded_bytes}) {\n            this.file.unique_name = unique_name\n            this.remote_file_name = unique_name\n            this.uploaded_bytes = uploaded_bytes\n            this.file_size = file_size\n            this.progress = progress\n            return progress\n        },\n        async upload() {\n            if(!this.file) return\n            const file = this.file\n            this.processing = true\n            this.paused = false\n            this.end = this.start + this.chunk_size + 1\n            const blob = file.slice( this.start, this.end )\n            const file_reader = new FileReaderAsync()\n            const chunk = await file_reader.readAsDataURLAsync(blob)\n            return this.processChunk(file, chunk)\n        },\n        stop() {\n            if(typeof this.cancel==='function') this.cancel()\n            this.abort = true\n        },\n        onPause() {\n            this.processing = false\n            this.paused = true\n        },\n        reset() {\n            setTimeout(()=>{\n                this.cancel = null\n                this.start = 0\n                this.end = 0\n                this.processing = false\n                this.paused = false\n                this.abort = false\n            },1000)\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>","import mod from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-124.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FileUploader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-124.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FileUploader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FileUploader.vue?vue&type=template&id=786ceae4&\"\nimport script from \"./FileUploader.vue?vue&type=script&lang=js&\"\nexport * from \"./FileUploader.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"overflow-auto\"},[_c('div',{staticClass:\"d-flex flex-row justify-content-start align-items-start\"},[_c('b-button',{attrs:{\"size\":\"sm\",\"variant\":\"info\",\"disabled\":_vm.loading},on:{\"click\":_vm.getLogs}},[(_vm.loading)?_c('font-awesome-icon',{attrs:{\"icon\":\"spinner\",\"spin\":\"\"}}):_c('font-awesome-icon',{attrs:{\"icon\":\"sync\"}}),_c('span',[_vm._v(\" Reload\")])],1),(_vm.hasItems)?_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.modal-delete\",modifiers:{\"modal-delete\":true}}],staticClass:\"ml-2\",attrs:{\"size\":\"sm\",\"variant\":\"danger\",\"disabled\":_vm.loading}},[_c('font-awesome-icon',{attrs:{\"icon\":\"trash\"}}),_c('span',[_vm._v(\" Delete logs\")])],1):_vm._e(),_c('b-modal',{attrs:{\"id\":\"modal-delete\",\"title\":\"Delete logs\"},on:{\"ok\":_vm.handleOkDelete}},[_c('p',{staticClass:\"my-4\"},[_vm._v(\"Are you sure you want to delete all logs for the current project?\")])]),(_vm.hasItems)?_c('b-pagination',{staticClass:\"ml-2\",attrs:{\"total-rows\":_vm.rows,\"per-page\":_vm.per_page,\"aria-controls\":\"my-table\",\"size\":\"sm\"},model:{value:(_vm.current_page),callback:function ($$v) {_vm.current_page=$$v},expression:\"current_page\"}}):_vm._e()],1),_c('b-table',{staticClass:\"my-2\",attrs:{\"id\":\"my-table\",\"items\":_vm.items_proxy,\"_per-page\":\"per_page\",\"_current-page\":\"current_page\",\"small\":\"\",\"bordered\":\"\",\"striped\":\"\",\"hover\":\"\"}}),(_vm.hasItems)?_c('b-pagination',{attrs:{\"total-rows\":_vm.rows,\"per-page\":_vm.per_page,\"aria-controls\":\"my-table\",\"size\":\"sm\"},model:{value:(_vm.current_page),callback:function ($$v) {_vm.current_page=$$v},expression:\"current_page\"}}):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"overflow-auto\">\n    <div class=\"d-flex flex-row justify-content-start align-items-start\">\n        <b-button size=\"sm\" variant=\"info\" @click=\"getLogs\" :disabled=\"loading\">\n            <font-awesome-icon v-if=\"loading\" icon=\"spinner\" spin/>\n            <font-awesome-icon v-else icon=\"sync\" />\n            <span> Reload</span>\n        </b-button>\n        <b-button size=\"sm\" variant=\"danger\" class=\"ml-2\" v-b-modal.modal-delete :disabled=\"loading\" v-if=\"hasItems\">\n            <font-awesome-icon icon=\"trash\" />\n            <span> Delete logs</span>\n        </b-button>\n\n        <b-modal id=\"modal-delete\" title=\"Delete logs\" @ok=\"handleOkDelete\">\n            <p class=\"my-4\">Are you sure you want to delete all logs for the current project?</p>\n        </b-modal>\n\n        <b-pagination class=\"ml-2\" v-if=\"hasItems\"\n        v-model=\"current_page\"\n        :total-rows=\"rows\"\n        :per-page=\"per_page\"\n        aria-controls=\"my-table\"\n        size=\"sm\"\n        ></b-pagination>\n    </div>\n\n    <b-table\n      id=\"my-table\"\n      class=\"my-2\"\n      :items=\"items_proxy\"\n      _per-page=\"per_page\"\n      _current-page=\"current_page\"\n      small\n      bordered\n      striped\n      hover\n    ></b-table>\n    \n    <b-pagination v-if=\"hasItems\"\n        v-model=\"current_page\"\n        :total-rows=\"rows\"\n        :per-page=\"per_page\"\n        aria-controls=\"my-table\"\n        size=\"sm\"\n        ></b-pagination>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\n\nexport default {\n    data() {\n        return {\n            per_page: 20,\n            current_page: 1,\n            loading: false,\n        }\n    },\n    async created() {\n    },\n    computed: {\n        ...mapState({\n            items: state => state.logs.list,\n        }),\n        items_proxy() {\n            const items = [...this.items]\n            let per_page = this.per_page\n\n            let remainder = (this.current_page*per_page)-items.length\n            if(remainder<0) remainder = 0\n\n            const empty_value = \"\"\n            let placeholder = {'no logs': empty_value}\n            if(items.length>0) {\n                placeholder = {}\n                let first_item = items[0]\n                for(let key of Object.keys(first_item)) {\n                    placeholder[key] = empty_value\n                }\n            }\n\n            for(let i=0; i<remainder; i++) items.push(placeholder)\n            return items\n        },\n        rows() {\n            const total = this.$store.getters['logs/total']\n            return total || this.items.length\n        },\n        hasItems() {\n            try {\n                return this.items.length>0\n            } catch (error) {\n                return false\n            }\n        }\n    },\n    watch: {\n        current_page: {\n            immediate: true,\n            handler() {\n                this.getLogs()\n            }\n        }\n    },\n    methods: {\n        async getLogs() {\n            try {\n                this.loading = true\n                const limit = this.per_page\n                const start = this.per_page*(this.current_page-1)\n                const response =  await this.$API.dispatch('logs/get',{start, limit})\n                const {data={}} = response\n                const {data: list={}, metadata={}} = data\n                await this.$store.dispatch('logs/setState', {list, metadata})\n            } catch (error) {\n                console.log(error)\n            }finally {\n                this.loading = false\n            }\n        },\n        async handleOkDelete() {\n            const response =  await this.$API.dispatch('logs/delete')\n            console.log(response);\n            this.getLogs()\n        }\n    }\n}\n</script>\n\n<style scoped>\n#my-table >>> tbody td::before {\n    content: '';\n    display: block;\n    min-height: 20px;\n    float: left;\n}\n#my-table >>> tbody td {\n    vertical-align: middle;;\n}\n</style>","import mod from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-124.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LogsTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-124.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LogsTable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LogsTable.vue?vue&type=template&id=d102da56&scoped=true&\"\nimport script from \"./LogsTable.vue?vue&type=script&lang=js&\"\nexport * from \"./LogsTable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LogsTable.vue?vue&type=style&index=0&id=d102da56&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d102da56\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('h6',[_vm._v(\"Review your settings\")]),_c('table',{staticClass:\"table table-bordered table-striped\"},[_vm._m(0),_c('tbody',_vm._l((_vm.settings),function(value,key){return _c('tr',{key:key},[_c('td',[_vm._v(_vm._s(key))]),_c('td',[_c('pre',[_vm._v(_vm._s(value))])])])}),0)]),_c('div',{staticClass:\"buttons d-flex flex-row justify-content-between\"},[_vm._t(\"left\"),_c('section',[_c('button',{staticClass:\"btn btn-primary ml-2\",attrs:{\"disabled\":_vm.processing},on:{\"click\":_vm.importCSV}},[(_vm.processing)?_c('font-awesome-icon',{attrs:{\"icon\":\"spinner\",\"spin\":\"\",\"fixed-width\":\"\"}}):_c('font-awesome-icon',{attrs:{\"icon\":\"file-import\",\"fixed-width\":\"\"}}),_c('span',[_vm._v(\" import\")])],1)]),_vm._t(\"right\",null,{\"validation\":_vm.$v})],2),_c('b-modal',{ref:\"modal-success\",attrs:{\"title\":\"Process completed\",\"ok-only\":\"\",\"size\":\"xl\"},on:{\"hidden\":_vm.onCloseModal}},[_c('p',{staticClass:\"my-4\"},[_vm._v(\"The import proces is completed. Please check the \"),_c('router-link',{attrs:{\"to\":{name:'logs'}}},[_vm._v(\"logs\")]),_vm._v(\" for details.\")],1),_c('LogsTable',{ref:\"logs\"})],1),_c('b-modal',{ref:\"modal-upload\",attrs:{\"title\":\"Uploading CSV file\",\"ok-only\":\"\",\"no-close-on-esc\":\"\",\"no-close-on-backdrop\":\"\",\"hide-header-close\":\"\",\"ok-title\":\"cancel\"},on:{\"ok\":_vm.onProcessStopped}},[_c('FileUploader',{ref:\"uploader\",attrs:{\"files\":_vm.files}})],1),_c('b-modal',{ref:\"modal-process\",attrs:{\"id\":\"modal-process\",\"title\":\"Processing CSV file\",\"ok-only\":\"\",\"no-close-on-esc\":\"\",\"no-close-on-backdrop\":\"\",\"hide-header-close\":\"\",\"ok-title\":\"cancel\",\"size\":\"xl\"},on:{\"ok\":_vm.onProcessStopped}},[_c('FileProcesser',{ref:\"processer\",attrs:{\"background_process\":_vm.background_process}}),_c('LogsTable',{ref:\"logs\"})],1),_c('b-modal',{ref:\"modal-abort\",attrs:{\"id\":\"modal-abort\",\"title\":\"Process stopped\",\"ok-only\":\"\"},on:{\"ok\":_vm.onProcessStopped}},[_c('p',{staticClass:\"my-4\"},[_vm._v(\"The process has been stopped by the user\")])])],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('thead',[_c('tr',[_c('th',[_vm._v(\"key\")]),_c('th',[_vm._v(\"value\")])])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(_vm.processing && !_vm.background_process)?_c('div',[_c('b-progress',{attrs:{\"max\":_vm.max,\"show-progress\":\"\",\"animated\":\"\",\"variant\":\"success\",\"height\":\"2rem\"}},[_c('b-progress-bar',{attrs:{\"value\":_vm.progress,\"label\":`${(_vm.progress*100).toFixed(2)}%`}})],1),_c('div',{staticClass:\"text-muted small my-2\"},[(_vm.total_lines && _vm.total_lines>0)?_c('span',[_vm._v(\"Processed \"+_vm._s(_vm.current_line)+\"/\"+_vm._s(_vm.total_lines))]):_vm._e(),_c('non-blank-space')],1)],1):_vm._e(),(false)?_c('section',{staticClass:\"debug\"},[_vm._v(\" \"+_vm._s(_vm.background_process)+\" \"+_vm._s(_vm.progress)+\" \"+_vm._s(_vm.processing)+\" \")]):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div v-if=\"processing && !background_process\">\n            <b-progress  :max=\"max\" show-progress animated variant=\"success\" height=\"2rem\">\n                <b-progress-bar :value=\"progress\" :label=\"`${(progress*100).toFixed(2)}%`\"></b-progress-bar>\n            </b-progress>\n            <!-- <button class=\"btn btn-danger\" @click=\"onPause\">Pause</button> -->\n            <div class=\"text-muted small my-2\">\n                <span v-if=\"total_lines && total_lines>0\">Processed {{current_line}}/{{total_lines}}</span>\n                <non-blank-space />\n            </div>\n        </div>\n        <section class=\"debug\" v-if=\"false\">\n            {{background_process}}\n            {{progress}}\n            {{processing}}\n        </section>\n    </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n    data() {\n        return {\n            cancel: null,\n            max:1,\n            current_line: 0,\n            processing: false,\n            abort: false,\n            progress: 0,\n        }\n    },\n    computed: {\n        ...mapState({\n            settings: state => state.import_settings,\n            total_lines: state => state.csv_data.total_lines,\n        }),\n    },\n    props: {\n        background_process: {\n            type: Boolean,\n            default: false\n        }\n    },\n    destroyed() {\n        this.reset()\n    },\n    methods: {\n        /**\n         * process a remote file.\n         * start from line 1 by default\n         * since on line 0 we usually have field names\n         */\n        async process(file_name, line=1) {\n            if(this.abort) return\n            this.processing = true\n            try {\n\n                const next = async (line) => {\n                    const settings = {...this.settings}\n                    settings.background_process = this.background_process //set the background process flag\n                    settings.data_row_start = line\n                    const promise = this.$API.dispatch('importData/processCSV',file_name, settings)\n                    this.cancel = promise.cancel\n                    const response = await promise\n                    const {data} = response\n                    if(data) {\n                        // exit if background process started\n                        if(this.background_process) return true;\n\n                        const {line=1} = data\n                        let progress = this.updateProgress({line})\n                        this.$emit('progress', {progress})\n                        return next(line)\n                    }\n                }\n                // await new Promise(resolve=>setTimeout(resolve, 10000))\n                await next(line)\n                this.$emit('completed')\n            } catch (error) {\n                this.$emit('error', error)\n            }finally {\n                this.processing = false\n            }\n\n        },\n        updateProgress({line}) {\n            if(this.total_lines<=0) return\n            if(line) this.current_line = line\n            if(isNaN(this.current_line) || isNaN(this.total_lines)) return\n            if(this.current_line>this.total_lines) this.current_line = this.total_lines\n            let progress = this.current_line/this.total_lines\n            this.progress = progress\n            return progress\n        },\n        reset() {\n            if(typeof this.cancel==='function') this.cancel()\n            this.abort = true\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>","import mod from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-124.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FileProcesser.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-124.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FileProcesser.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FileProcesser.vue?vue&type=template&id=084c3311&\"\nimport script from \"./FileProcesser.vue?vue&type=script&lang=js&\"\nexport * from \"./FileProcesser.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div>\n        <h6>Review your settings</h6>\n        <table class=\"table table-bordered table-striped\">\n            <thead>\n                <tr>\n                    <th>key</th>\n                    <th>value</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(value, key) in settings\" :key=\"key\">\n                    <td>{{key}}</td>\n                    <td><pre>{{value}}</pre></td>\n                </tr>\n            </tbody>\n        </table>\n        \n        <div class=\"buttons d-flex flex-row justify-content-between\" >\n            <slot name=\"left\" ></slot>\n            <!-- <slot>\n                <NOTE>CANNOT USE THIS BECAUSE IN CHROME RETURNS 'undefined'</NOTE>\n            </slot> -->\n            <section>\n                <button class=\"btn btn-primary ml-2\" @click=\"importCSV\" :disabled=\"processing\">\n                    <font-awesome-icon v-if=\"processing\" icon=\"spinner\" spin fixed-width/>\n                    <font-awesome-icon v-else icon=\"file-import\"  fixed-width/>\n                    <span> import</span>\n                </button>\n            </section>\n            <slot name=\"right\" :validation=\"$v\" ></slot>\n        </div>\n\n        <b-modal ref=\"modal-success\" title=\"Process completed\" ok-only @hidden=\"onCloseModal\" size=\"xl\">\n            <p class=\"my-4\">The import proces is completed. Please check the <router-link :to=\"{name:'logs'}\">logs</router-link> for details.</p>\n            <LogsTable ref=\"logs\"/>\n        </b-modal>\n\n        <b-modal ref=\"modal-upload\" title=\"Uploading CSV file\"\n            ok-only\n            no-close-on-esc\n            no-close-on-backdrop\n            hide-header-close\n            ok-title='cancel'\n            @ok=\"onProcessStopped\"\n        >\n            <FileUploader ref=\"uploader\" :files=\"files\"/>\n        </b-modal>\n\n        <b-modal ref=\"modal-process\" id=\"modal-process\" title=\"Processing CSV file\"\n            ok-only\n            no-close-on-esc\n            no-close-on-backdrop\n            hide-header-close\n            ok-title='cancel'\n            @ok=\"onProcessStopped\"\n            size=\"xl\"\n        >\n            <FileProcesser ref=\"processer\" :background_process=\"background_process\" />\n            <LogsTable ref=\"logs\"/>\n        </b-modal>\n\n        <b-modal ref=\"modal-abort\" id=\"modal-abort\" title=\"Process stopped\"\n            ok-only\n            @ok=\"onProcessStopped\"\n        >\n            <p class=\"my-4\">The process has been stopped by the user</p>\n        </b-modal>\n        \n        <!-- <b-button v-b-modal.modal-process>Launch demo modal</b-button> -->\n\n\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport FileUploader from '@/components/FileUploader'\nimport FileProcesser from '@/components/FileProcesser'\nimport LogsTable from '@/components/LogsTable'\n\nexport default {\n    components: {FileUploader,FileProcesser, LogsTable},\n    data() {\n        return {\n            processing: false,\n            background_process: false,\n        }\n    },\n    computed: {\n        ...mapState({\n            files: state => state.import_settings.files,\n            event_id: state => state.import_settings.event_id,\n            form_name: state => state.import_settings.form_name,\n            import_settings: state => state.import_settings,\n        }),\n        dynamic_fields() { return this.$store.getters['import_settings/mappedDynamicFields'] },\n        mappedFieldsWithCsvNames() { return this.$store.getters['import_settings/mappedFieldsWithCsvNames'] },\n        settings() {\n            const {name:file_name=''} = this.files || {}\n            const import_settings = {...this.import_settings}\n            const settings = {\n                'file name': file_name,\n                'event ID': import_settings.event_id,\n                'form name': import_settings.form_name,\n                'field delimiter': import_settings.field_delimiter,\n                'text qualifier': import_settings.text_qualifier,\n                'dates format': import_settings.dates_format,\n                'import mode': import_settings.import_mode,\n                'primary key': import_settings.primary_key,\n                'dynamic fields': this.dynamic_fields,\n                'mapping': this.mappedFieldsWithCsvNames,\n            }\n            return settings\n        }\n    },\n    methods: {\n        showModal(ref_name) {\n            const promise = new Promise((resolve, reject) => {\n                const modal_element = this.$refs[ref_name]\n                if(!modal_element) return reject()\n                const onShown = () => {\n                    modal_element.$off('shown', onShown)\n                    resolve()\n                }\n                modal_element.$on('shown', onShown)\n                modal_element.show()\n            })\n            return promise\n        },\n        closeModal(ref_name) {\n            const promise = new Promise((resolve, reject) => {\n                const modal_element = this.$refs[ref_name]\n                if(!modal_element) return reject()\n                const onShown = () => {\n                    modal_element.$off('hidden', onShown)\n                    resolve()\n                }\n                modal_element.$on('hidden', onShown)\n                modal_element.hide()\n            })\n            return promise\n        },\n        /**\n         * upload a file for later processing\n         */\n        async upload() {\n            await this.showModal('modal-upload')\n            const uploader = this.$refs.uploader\n            uploader.$on('completed', () => {\n                this.closeModal('modal-upload')\n            })\n            uploader.$on('error', ({message, file, error})=> {\n                console.log({message, file, error})\n            })\n            return uploader.upload()\n        },\n        updateLogs() {\n            const {getLogs} = this.$refs.logs\n            if(typeof getLogs !=='function') return\n            getLogs()\n        },\n        async showCompleted() {\n            await this.showModal('modal-success')\n        },\n\n        /**\n         * process the reomte file\n         */\n        async enqueProcess(file_name) {\n\n            try {\n                const settings = {...this.import_settings}\n                settings.dynamic_fields = this.dynamic_fields // only gey dynamic fields that are actually mapped\n                const response = await this.$API.dispatch('importData/enqueue',file_name, settings)\n                const {data} = response\n                const message = `Import process created (ID ${data['job_id']}). Please check your logs.`\n                await this.$bvModal.msgBoxOk(message, {\n                    title: 'Success',\n                    buttonSize: 'sm',\n                })\n                this.$router.push({name: 'home'})\n            } catch (error) {\n                let error_message = error\n                if(typeof error === 'object') {\n                    const { response: {data} } = error\n                    const {message='error'} = data\n                    error_message = `${message}`\n                }\n                this.$bvModal.msgBoxOk(error_message, {\n                    title: 'Error',\n                    buttonSize: 'sm',\n                })\n            }            \n        },\n        async onProcessStopped() {\n            await this.showModal('modal-abort')\n        },\n        /**\n         * start the process:\n         * - upload the file\n         * - process the remote file\n         */\n        async importCSV() {\n            try {\n                const {unique_name} = await this.upload()\n                if(!unique_name) return\n                // let file_name = 'Data8277.csv'\n                await this.enqueProcess(unique_name)\n            } catch (error) {\n                console.log(error)\n            }finally {\n                this.processing = false\n                this.background_process = false\n            }\n        },\n        onCloseModal() {\n            // this.$router.push({name: 'home'})\n            console.log('done')\n        },\n    },\n    validations() {\n        return {}\n    }\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-124.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Review.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js??clonedRuleSet-124.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Review.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Review.vue?vue&type=template&id=fcebd24e&scoped=true&\"\nimport script from \"./Review.vue?vue&type=script&lang=js&\"\nexport * from \"./Review.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fcebd24e\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","processing","attrs","max","progress","toFixed","staticClass","uploaded_bytes","_v","_s","formatBytes","file_size","_e","staticRenderFns","MIN_CHUNK_SIZE","MAX_CHUNK_SIZE","TOTAL_CHUNKS","UploadMetadata","constructor","name","percentage","unique_name","written_bytes","data","cancel","content","start","end","paused","abort","remote_file_name","props","files","type","default","computed","file","chunk_size","processed","destroyed","methods","metadata","response","message","error","calculateProgress","sendChunk","calcChunkSize","size","updateMetadata","stop","onPause","reset","setTimeout","component","loading","on","getLogs","hasItems","directives","rawName","modifiers","handleOkDelete","rows","per_page","model","value","current_page","callback","$$v","expression","items_proxy","items","placeholder","watch","immediate","handler","limit","list","console","_m","_l","settings","key","_t","importCSV","$v","ref","onCloseModal","onProcessStopped","background_process","total_lines","current_line","line","updateProgress","components","FileUploader","FileProcesser","LogsTable","event_id","form_name","import_settings","dynamic_fields","mappedFieldsWithCsvNames","showModal","modal_element","resolve","closeModal","uploader","updateLogs","title","buttonSize","error_message","validations"],"sourceRoot":""}