"use strict";(("undefined"!==typeof self?self:this)["webpackChunkadvanced_import"]=("undefined"!==typeof self?self:this)["webpackChunkadvanced_import"]||[]).push([[476],{6491:function(e,t,s){s.d(t,{Z:function(){return m}});var r=function(){var e=this,t=e._self._c;return t("div",[e.processing?t("div",[t("b-progress",{attrs:{max:e.max,"show-progress":"",animated:!1,variant:"primary",size:"sm"}},[t("b-progress-bar",{attrs:{value:e.progress,label:`${(100*e.progress).toFixed(2)}%`}})],1),t("div",{staticClass:"text-muted small"},[e.uploaded_bytes&&e.uploaded_bytes>0?t("span",[e._v("uploaded "+e._s(e.formatBytes(e.uploaded_bytes))+" of "+e._s(e.formatBytes(e.file_size)))]):e._e(),t("non-blank-space")],1)],1):e._e(),e._e()])},i=[],a=s(7614),n=s(1982);const o=1024e3,l=512e4,u=20;class d{constructor({file_size:e,name:t,percentage:s,progress:r,unique_name:i,uploaded_bytes:a,written_bytes:n}){this.file_size=e,this.name=t,this.percentage=s,this.progress=r,this.unique_name=i,this.uploaded_bytes=a,this.written_bytes=n}}var c={data(){return{cancel:null,content:"",start:0,end:0,max:1,processing:!1,paused:!1,abort:!1,remote_file_name:null,progress:0,uploaded_bytes:0,file_size:0,formatBytes:n.td}},props:{files:{type:[File,Array],default:()=>[]}},computed:{file(){let e,t=this.files;return"object"===typeof t?e=t:Array.isArray(t)&&t.length>0&&(e=t[0]),e?new File([e],e.name):null},chunk_size(){return this.calcChunkSize(this.file)},processed(){let e=this.uploaded_bytes||0,t=this.file_size||0,s=(0,n.td)(e),r=(0,n.td)(t);return`${s}/${r}`}},destroyed(){this.stop()},methods:{async processChunk(e,t){try{if(this.abort)return;const s=await this.sendChunk(e,t),{data:r}=s;if(!r)throw new Error("no response");const i=new d(r);return this.updateMetadata(i),this.$emit("progress",{file:e,metadata:i}),this.start=this.end,!this.paused&&this.end<e.size?this.upload():(this.reset(),this.$emit("completed",i),i)}catch(s){const{response:t={}}=s,{data:r={}}=t,{message:i=""}=r;this.$emit("error",{message:i,file:e,error:s}),this.reset()}},calculateProgress(e,t){try{const s=t/e.size;return t<0?0:t>e.size?1:s}catch(s){return 0}},sendChunk(e,t){const s=this.$API.dispatch("upload/upload",e,t);return this.cancel=s.cancel,s},calcChunkSize(e){if(!e)return o;const{size:t=0}=e;let s=t/u;return s<o?o:s>l?l:s},updateMetadata({file_size:e,progress:t,unique_name:s,uploaded_bytes:r}){return this.file.unique_name=s,this.remote_file_name=s,this.uploaded_bytes=r,this.file_size=e,this.progress=t,t},async upload(){if(!this.file)return;const e=this.file;this.processing=!0,this.paused=!1,this.end=this.start+this.chunk_size+1;const t=e.slice(this.start,this.end),s=new a.Z,r=await s.readAsDataURLAsync(t);return this.processChunk(e,r)},stop(){"function"===typeof this.cancel&&this.cancel(),this.abort=!0},onPause(){this.processing=!1,this.paused=!0},reset(){setTimeout((()=>{this.cancel=null,this.start=0,this.end=0,this.processing=!1,this.paused=!1,this.abort=!1}),1e3)}}},p=c,h=s(3736),f=(0,h.Z)(p,r,i,!1,null,null,null),m=f.exports},6041:function(e,t,s){s.r(t),s.d(t,{default:function(){return c}});var r=function(){var e=this,t=e._self._c;return t("div",[t("FileUploader",{ref:"uploader",attrs:{files:e.files}}),t("b-form-file",{ref:"file",attrs:{id:"file","DISABLED-state":"Boolean(files)",placeholder:"Choose a file or drop it here...","drop-placeholder":"Drop file here..."},model:{value:e.files,callback:function(t){e.files=t},expression:"files"}}),t("b-button",{on:{click:e.upload}},[e._v("upload")]),t("div",{staticClass:"d-flex flex-row justify-content-center align-items-center"},[t("b-card",{attrs:{title:"This is a test","img-src":e.cat},scopedSlots:e._u([{key:"header",fn:function(){return[t("h6",{staticClass:"mb-0"},[e._v("Header Slot")])]},proxy:!0},{key:"footer",fn:function(){return[t("h6",{staticClass:"mb-0"},[e._v("Footer Slot")])]},proxy:!0}])},[t("b-card-text",[e._v(" This is a test ")])],1)],1)],1)},i=[],a=s.p+"img/crying-cat.99949377.jpg",n=s(6491),o={components:{FileUploader:n.Z},data(){return{cat:a,files:null,progress:0,max:100,uploading:!1,completed:!1}},computed:{},methods:{onUploadCompleted(){console.log(arguments)},upload(){const e=this.$refs.uploader;return e.$on("completed",(()=>{console.log(arguments)})),e.$on("error",(({message:e,file:t,error:s})=>{console.log({message:e,file:t,error:s})})),e.upload()}}},l=o,u=s(3736),d=(0,u.Z)(l,r,i,!1,null,null,null),c=d.exports}}]);
//# sourceMappingURL=advanced_import.umd.min.476.js.map